/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'demo.java-application-conventions'
    // Apply the java plugin to add support for Java
    id 'java'
    // Apply the application plugin to add support for building a CLI application.
    id 'application'
    // https://imperceptiblethoughts.com/shadow/getting-started/#default-java-groovy-tasks
    id 'com.github.johnrengelman.shadow' version '6.1.0'
    //id 'com.github.johnrengelman.shadow' version '4.0.1'
}

dependencies {
    implementation project(':utilities')
    // This dependency is used by the application.
    implementation 'com.google.guava:guava:29.0-jre'
    // Use JUnit Jupiter API for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'
    // Use JUnit Jupiter Engine for testing.
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.2'
    implementation "com.sparkjava:spark-core:2.9.3"
    implementation "com.sparkjava:spark-template-mustache:2.7.1"
    implementation "org.apache.logging.log4j:log4j-api:2.13.3"
    implementation "org.apache.logging.log4j:log4j-core:2.13.3"
    implementation "org.apache.logging.log4j:log4j-slf4j-impl:2.13.3"
}

application {
    // Define the main class for the application.
    mainClass = 'demo.app.App'
    mainClassName = 'demo.app.App'
}

task stage(dependsOn: ['shadowJar'])
shadowJar.mustRunAfter clean
/*
task stage(type: Copy, dependsOn: [clean, build]) {
    from jar.archivePath
    into project.rootDir
    rename {
        'app.jar'
    }
}
*/
/*
stage.mustRunAfter(clean)

clean << {
    project.file('app.jar').delete()
}
*/